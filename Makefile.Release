#############################################################################
# Makefile for building: Micropond
# Generated by qmake (2.01a) (Qt 4.8.4) on: Wed Sep 11 16:00:28 2013
# Project:  Micropond.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
CFLAGS        = -m64 -pipe -O6 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O6 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -Irelease
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = CellEditor.cpp \
		NetworkConfig.cpp \
		Outgoing.cpp \
		Incoming.cpp \
		CreatureBar.cpp \
		Renderer.cpp \
		Simulation.cpp \
		Window.cpp \
		main.cpp release/moc_CellEditor.cpp \
		release/moc_NetworkConfig.cpp \
		release/moc_Outgoing.cpp \
		release/moc_Incoming.cpp \
		release/moc_CreatureBar.cpp \
		release/moc_Renderer.cpp \
		release/moc_Simulation.cpp \
		release/moc_Window.cpp
OBJECTS       = release/CellEditor.o \
		release/NetworkConfig.o \
		release/Outgoing.o \
		release/Incoming.o \
		release/CreatureBar.o \
		release/Renderer.o \
		release/Simulation.o \
		release/Window.o \
		release/main.o \
		release/moc_CellEditor.o \
		release/moc_NetworkConfig.o \
		release/moc_Outgoing.o \
		release/moc_Incoming.o \
		release/moc_CreatureBar.o \
		release/moc_Renderer.o \
		release/moc_Simulation.o \
		release/moc_Window.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Micropond.pro
QMAKE_TARGET  = Micropond
DESTDIR       = 
TARGET        = Micropond

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) -o Makefile.Release Micropond.pro

dist: 
	@$(CHK_DIR_EXISTS) release/Micropond1.0.0 || $(MKDIR) release/Micropond1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/Micropond1.0.0/ && $(COPY_FILE) --parents CellEditor.h NetworkConfig.h Outgoing.h Incoming.h CreatureBar.h Renderer.h Simulation.h Window.h release/Micropond1.0.0/ && $(COPY_FILE) --parents CellEditor.cpp NetworkConfig.cpp Outgoing.cpp Incoming.cpp CreatureBar.cpp Renderer.cpp Simulation.cpp Window.cpp main.cpp release/Micropond1.0.0/ && (cd `dirname release/Micropond1.0.0` && $(TAR) Micropond1.0.0.tar Micropond1.0.0 && $(COMPRESS) Micropond1.0.0.tar) && $(MOVE) `dirname release/Micropond1.0.0`/Micropond1.0.0.tar.gz . && $(DEL_FILE) -r release/Micropond1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_CellEditor.cpp release/moc_NetworkConfig.cpp release/moc_Outgoing.cpp release/moc_Incoming.cpp release/moc_CreatureBar.cpp release/moc_Renderer.cpp release/moc_Simulation.cpp release/moc_Window.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_CellEditor.cpp release/moc_NetworkConfig.cpp release/moc_Outgoing.cpp release/moc_Incoming.cpp release/moc_CreatureBar.cpp release/moc_Renderer.cpp release/moc_Simulation.cpp release/moc_Window.cpp
release/moc_CellEditor.cpp: Simulation.h \
		CellEditor.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) CellEditor.h -o release/moc_CellEditor.cpp

release/moc_NetworkConfig.cpp: Outgoing.h \
		Simulation.h \
		NetworkConfig.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) NetworkConfig.h -o release/moc_NetworkConfig.cpp

release/moc_Outgoing.cpp: Simulation.h \
		Outgoing.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Outgoing.h -o release/moc_Outgoing.cpp

release/moc_Incoming.cpp: Simulation.h \
		Incoming.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Incoming.h -o release/moc_Incoming.cpp

release/moc_CreatureBar.cpp: Simulation.h \
		CreatureBar.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) CreatureBar.h -o release/moc_CreatureBar.cpp

release/moc_Renderer.cpp: Simulation.h \
		Renderer.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Renderer.h -o release/moc_Renderer.cpp

release/moc_Simulation.cpp: Simulation.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Simulation.h -o release/moc_Simulation.cpp

release/moc_Window.cpp: Renderer.h \
		Simulation.h \
		CreatureBar.h \
		Incoming.h \
		Outgoing.h \
		Window.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Window.h -o release/moc_Window.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

release/CellEditor.o: CellEditor.cpp CellEditor.h \
		Simulation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CellEditor.o CellEditor.cpp

release/NetworkConfig.o: NetworkConfig.cpp NetworkConfig.h \
		Outgoing.h \
		Simulation.h \
		Incoming.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/NetworkConfig.o NetworkConfig.cpp

release/Outgoing.o: Outgoing.cpp Outgoing.h \
		Simulation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Outgoing.o Outgoing.cpp

release/Incoming.o: Incoming.cpp Incoming.h \
		Simulation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Incoming.o Incoming.cpp

release/CreatureBar.o: CreatureBar.cpp CreatureBar.h \
		Simulation.h \
		Renderer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CreatureBar.o CreatureBar.cpp

release/Renderer.o: Renderer.cpp Renderer.h \
		Simulation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Renderer.o Renderer.cpp

release/Simulation.o: Simulation.cpp Simulation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Simulation.o Simulation.cpp

release/Window.o: Window.cpp Window.h \
		Renderer.h \
		Simulation.h \
		CreatureBar.h \
		Incoming.h \
		Outgoing.h \
		NetworkConfig.h \
		CellEditor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Window.o Window.cpp

release/main.o: main.cpp Window.h \
		Renderer.h \
		Simulation.h \
		CreatureBar.h \
		Incoming.h \
		Outgoing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/moc_CellEditor.o: release/moc_CellEditor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_CellEditor.o release/moc_CellEditor.cpp

release/moc_NetworkConfig.o: release/moc_NetworkConfig.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_NetworkConfig.o release/moc_NetworkConfig.cpp

release/moc_Outgoing.o: release/moc_Outgoing.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_Outgoing.o release/moc_Outgoing.cpp

release/moc_Incoming.o: release/moc_Incoming.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_Incoming.o release/moc_Incoming.cpp

release/moc_CreatureBar.o: release/moc_CreatureBar.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_CreatureBar.o release/moc_CreatureBar.cpp

release/moc_Renderer.o: release/moc_Renderer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_Renderer.o release/moc_Renderer.cpp

release/moc_Simulation.o: release/moc_Simulation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_Simulation.o release/moc_Simulation.cpp

release/moc_Window.o: release/moc_Window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_Window.o release/moc_Window.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

